from Crypto.Cipher import AES


"""data = [
	0x16, 0x7C, 0x99, 0xA3, 0x89, 0xE3, 0x67, 0x7D,
	0x2C, 0x5B, 0xAF, 0x6A, 0x66, 0x16, 0x96, 0x7B,
	0x69, 0xD1, 0x35, 0xF0, 0x4F, 0x7B, 0x50, 0x59,
	0xA5, 0x06, 0x6C, 0x49, 0x30, 0x68, 0x1C, 0xE3,
	0x15, 0x53, 0x45, 0x32, 0x40, 0x4B, 0xFE, 0x3B,
	0x89, 0xD5, 0x55, 0xBC, 0xFC, 0x5F, 0x13, 0xDB,
	0xCF, 0xE4, 0x8E, 0x94, 0x1E, 0x56, 0x7A, 0x68,
	0x65, 0x11, 0xDE, 0x27, 0x6B, 0xE0, 0xFB, 0x05,
	0x7B, 0xEF, 0x45, 0x79, 0x2E, 0xF5, 0xCF, 0xDF,
	0x12, 0x11, 0x6B, 0x65, 0x74, 0x9F, 0xA6, 0xCF,
	0x0D, 0xD8, 0xDD, 0x6E, 0x36, 0x96, 0x4F, 0xE8,
	0x93, 0x81, 0x1B, 0x4A, 0x9A, 0x8A, 0xB8, 0x34,
	0xCB, 0xC8, 0xFE, 0xB8, 0xC5, 0x36, 0xCC, 0xAB,
	0x5A, 0x6A, 0xEB, 0xC3, 0x88, 0x03, 0x38, 0x10,
	0x57, 0xA5, 0x4A, 0xC7, 0x76, 0xD2, 0x6D, 0xFF,
	0x67, 0x27, 0xE9, 0xA6, 0x35, 0x25, 0x24, 0x41
]
raw_data = bytes()
for byte in data: raw_data += byte.to_bytes(1, "little")"""
raw_data = b"ABCD"
raw_data = raw_data + b'\00' * (16 - len(raw_data))


IV = [
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00
]
raw_IV = bytes()
for byte in IV: raw_IV += byte.to_bytes(1, "little")

key = b"ABCD"
key = key + b'\00' * (16 - len(key))

cipher = AES.new(key, AES.MODE_CBC, iv=raw_IV)
enc = cipher.encrypt(raw_data)

for index, byte in enumerate(enc):
	print(hex(byte), end=", ")
	if not (index + 1) % 8: print()
