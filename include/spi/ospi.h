//
// Created by marijn on 4/19/24.
//

#ifndef STM32H7B0_CMSIS_OSPI_H
#define STM32H7B0_CMSIS_OSPI_H
#include "main.h"
#include "sys.h"
#include "gpio.h"


/*!<
 * types
 * */
typedef enum {
	OSPI_CLK_SRC_AHB =			0b00,	//R
	OSPI_CLK_SRC_PLL1_Q =		0b01,
	OSPI_CLK_SRC_PLL2_R =		0b10,
	OSPI_CLK_SRC_PER =			0b11
} OSPI_CLK_SRC_t;

typedef enum {
	OSPI_PIN_DISABLE =	0x00000000,
	// OSPI1
	OSPI1_IO3_A1 =		0x010900AE,		OSPI1_IO5_D5 =		0x053A00AE,
	OSPI1_DQS_A1 =		0x010B00AE,		OSPI1_IO6_D6 =		0x063A00AE,
	OSPI1_SCK_A3 =		0x030300AE,		OSPI1_IO7_D7 =		0x073A00AE,
	OSPI1_IO3_A6 =		0x060600AE,		OSPI1_IO0_D11 =		0x0B3900AE,
	OSPI1_IO2_A7 =		0x070A00AE,		OSPI1_IO1_D12 =		0x0C3900AE,
	OSPI1_IO1_B0 =		0x001B00AE,		OSPI1_IO3_D13 =		0x0D3900AE,
	OSPI1_IO0_B1 =		0x011B00AE,		OSPI1_IO2_E2 =		0x024900AE,
	OSPI1_SCK_B2 =		0x021900AE,		OSPI1_IO4_E7 =		0x074A00AE,
	OSPI1_DQS_B2 =		0x021A00AE,		OSPI1_IO5_E8 =		0x084A00AE,
	OSPI1_NSS_B6 =		0x061A00AE,		OSPI1_IO6_E9 =		0x094A00AE,
	OSPI1_NSS_B10 =		0x0A1900AE,		OSPI1_IO7_E10 =		0x0A4A00AE,
	OSPI1_NSCK_B12 =	0x0C1300AE,		OSPI1_NSS_E11 =		0x0B4B00AE,
	OSPI1_IO4_C1 =		0x012A00AE,		OSPI1_IO3_F6 =		0x065A00AE,
	OSPI1_IO2_C2 =		0x022900AE,		OSPI1_IO2_F7 =		0x075A00AE,
	OSPI1_IO5_C2 = 		0x022B00AE,		OSPI1_IO0_F8 =		0x085A00AE,
	OSPI1_IO0_C3 =		0x032900AE,		OSPI1_IO1_F9 =		0x095A00AE,
	OSPI1_IO6_C3 =		0x032B00AE,		OSPI1_SCK_F10 =		0x0A5900AE,
	OSPI1_DQS_C5 =		0x052A00AE,		OSPI1_NSCK_F11 =	0x0B5900AE,
	OSPI1_IO0_C9 =		0x092900AE,		OSPI1_NSS_G6 =		0x066A00AE,
	OSPI1_IO1_C10 =		0x0A2900AE,		OSPI1_IO6_G9 =		0x096900AE,
	OSPI1_NSS_C11 =		0x0B2900AE,		OSPI1_IO7_G14 =		0x0E6900AE,
	OSPI1_IO4_D4 =		0x043A00AE,		OSPI1_IO4_H2 =		0x027900AE,
	OSPI1_IO5_H3 =		0x037900AE,
	// OSPI2
	OSPI2_IO0_F0 =		0x005900B3,		OSPI2_IO5_G1 =		0x016900B3,
	OSPI2_IO1_F1 =		0x015900B3,		OSPI2_DQS_G7 =		0x076900B3,
	OSPI2_IO2_F2 =		0x025900B3,		OSPI2_IO6_G10 =		0x0A6300B3,
	OSPI2_IO3_F3 =		0x035900B3,		OSPI2_IO7_G11 =		0x0B6900B3,
	OSPI2_SCK_F4 =		0x045900B3,		OSPI2_NSS_G12 =		0x0C6300B3,
	OSPI2_NSCK_F5 =		0x055900B3,		OSPI2_DQS_G15 =		0x0F6900B3,
	OSPI2_DQS_F12 =		0x0C5900B3,		OSPI2_IO0_I9 =		0x098300B3,
	OSPI2_IO4_G0 =		0x006900B3,		OSPI2_IO1_I10 =		0x0A8300B3,
	OSPI2_IO2_I11 =		0x0B8300B3,
} OSPI_GPIO_t;

typedef enum {
	OSPI_MODE_OCTO =		0b000U,
	OSPI_MODE_QUAD =		0b001U,
	OSPI_MODE_DUAL =		0b010U,
	OSPI_MODE_SINGLE =		0b011U,
	OSPI_MODE_DUAL_QUAD =	0b100U
} OSPI_MODE_t;  // TODO!!!


/*!<
 * variables
 * */
extern uint32_t OSPI12_kernel_frequency;


/*!<
 * init
 * */
// TODO: dualquad spi!!
void config_OSPI_kernel_clock(OSPI_CLK_SRC_t ospi_src);
void fconfig_OSPI(
	OSPI_GPIO_t sck, OSPI_GPIO_t io0, OSPI_GPIO_t io1, OSPI_GPIO_t io2, OSPI_GPIO_t io3,
	OSPI_GPIO_t io4, OSPI_GPIO_t io5, OSPI_GPIO_t io6, OSPI_GPIO_t io7, OSPI_MODE_t mode
);

void config_DSPI(OSPI_GPIO_t sck, OSPI_GPIO_t io0, OSPI_GPIO_t io1);
void config_QSPI(OSPI_GPIO_t sck, OSPI_GPIO_t io0, OSPI_GPIO_t io1, OSPI_GPIO_t io2, OSPI_GPIO_t io3);
void config_OSPI(
	OSPI_GPIO_t sck, OSPI_GPIO_t io0, OSPI_GPIO_t io1, OSPI_GPIO_t io2, OSPI_GPIO_t io3,
	OSPI_GPIO_t io4, OSPI_GPIO_t io5, OSPI_GPIO_t io6, OSPI_GPIO_t io7
);


#endif // STM32H7B0_CMSIS_OSPI_H
